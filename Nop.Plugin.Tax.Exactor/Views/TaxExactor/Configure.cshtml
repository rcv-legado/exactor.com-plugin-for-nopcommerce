@model Nop.Plugin.Tax.Exactor.Models.ConfigurationModel
@using Nop.Web.Framework;
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.MerchantId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.MerchantId)
                        @Html.ValidationMessageFor(model => model.MerchantId)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.UserId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.UserId)
                        @Html.ValidationMessageFor(model => model.UserId)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        &nbsp;
                    </div>
                    <div class="col-md-9">
                        <input type="submit" name="save" class="btn bg-blue" value="@T("Admin.Common.Save")"/>
                    </div>
                </div>
            </div>
        </div>


        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.TestAddress.CountryId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDropDownList("TestAddress.CountryId", Model.TestAddress.AvailableCountries)
                        @Html.ValidationMessageFor(model => model.TestAddress.CountryId)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.TestAddress.RegionId)
                    </div>
                    <div class="col-md-9">
                        @Html.NopDropDownList("TestAddress.RegionId", Model.TestAddress.AvailableStates)
                        @Html.ValidationMessageFor(model => model.TestAddress.RegionId)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.TestAddress.City)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.TestAddress.City)
                        @Html.ValidationMessageFor(model => model.TestAddress.City)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.TestAddress.ZipPostalCode)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.TestAddress.ZipPostalCode)
                        @Html.ValidationMessageFor(model => model.TestAddress.ZipPostalCode)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.TestAddress.Address)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.TestAddress.Address)
                        @Html.ValidationMessageFor(model => model.TestAddress.Address)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        &nbsp;
                    </div>
                    <div class="col-md-9">
                        <input type="submit" name="test" class="btn bg-blue" value="@T("Plugins.Tax.Exactor.Test")"/>
                    </div>
                </div>
            </div>
        </div>

    </div>


    <script type="text/javascript">
        function load_states(countryId) {
            var regions = $("#TestAddress_RegionId");

            $.get("@(Url.Action("GetStatesByCountryId"))",
                    { "countryId": countryId },
                    function(data) {
                        regions.html('');
                        $.each(data,
                            function(id, option) {
                                regions.append($('<option></option>').val(option.id).html(option.name));
                            });
                    })
                .fail(function() { alert('Failed to retrieve states.'); });
        }

        $(document)
            .ready(function () {
                $("#TestAddress_CountryId")
                    .change(function() {
                        var selectedItem = $(this).val();
                        load_states(selectedItem);
                    });
                load_states($("#TestAddress_CountryId").val());
            });
    </script>
}
